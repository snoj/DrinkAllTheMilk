#!/usr/bin/php
<?php
if(!isset($_SERVER['ID_SERIAL_SHORT'])) {
	die();
}

error_reporting(E_ALL);
ini_set('display_errors','On');
ini_set('error_log','/var/log/datm-notify.log');

$GLOBALS['pwd'] = dirname(__FILE__);
$GLOBALS['log_file'] = '/var/log/drinkallthemilkd.log';
$GLOBALS['loaded'] = false;
$GLOBALS['loading'] = false;
$GLOBALS['loop_img'] = '';
$GLOBALS['loop_dev'] = '/dev/loop0';
$GLOBALS['volume_name'] = 'encrypted-shadow';
$GLOBALS['symmetric_key'] = '/etc/drinkallthemilk/skey';
$GLOBALS['config'] = '/etc/drinkallthemilk/drinkallthemilk.conf.php';
//override defaults config with custom stuff.
include_once '/etc/drinkallthemilk/drinkallthemilk.conf.php';

//region functions
//get a list of media that has a target file in the root of it's dir tree.
function getList() {
	$out = array();
	//list /media/datm-* volumes first if they exist.
	exec('ls /media/datm-*/en-shad.img 2> /dev/null; ls /media/*/en-shad.img 2> /dev/null;', $out);
	return $out;
}
function testEnShadVol($volpath) {
	$out = array();
	exec(sprintf('if [ -d %s ]; then echo 1; fi;', $volpath), $out);
	return (bool)count($out);
}

function dismount() {
	//var_dump('No shadow images located.');
	$GLOBALS['loaded'] = false;
	$GLOBALS['loop_img'] = '';
	//echo "Cleaning up\r\n";
	//unmount
	exec(sprintf('umount /media/%s', $GLOBALS['volume_name']));
	//close luks
	exec(sprintf('cryptsetup luksClose /dev/mapper/%s', $GLOBALS['volume_name']));
	//disengage the loop
	exec(sprintf('losetup -d %s', $GLOBALS['loop_dev']) );
	//remove /media/{name}
	exec(sprintf('rm -R /media/%s', $GLOBALS['volume_name']));
	//remove /etc/shadow link
	
	if(file_exists('/etc/shadow.drinkallthemilk')) {
		exec('rm -f /etc/shadow');
		//move backup shadow to /etc/shadow
		exec('mv /etc/shadow.drinkallthemilk /etc/shadow');
	}
	//clear backup
	//exec('rm /etc/shadow.drinkallthemilk');
}
//endregion

if($_SERVER['ACTION'] == 'add') {
	//mount the disk(s)
	for($i=1;$i<=$_SERVER['UDISKS_PARTITION_TABLE_COUNT'];$i++) {
		//mkdir /media/{ID_SERIAL_SHORT}{I};
		exec(sprintf('mkdir /media/datm-%s-%s', $_SERVER['ID_SERIAL_SHORT'], $i));
		//mount /dev/{argv[1]}{I} /media/{ID_SERIAL_SHORT}{I}
		exec(sprintf('mount /dev/%s%s /media/datm-%s-%s', $argv[1], $i, $_SERVER['ID_SERIAL_SHORT'], $i));
		
		//now find the en-shad.img
		$shads = getList();
		for($i=0;$i<count($shads);$i++) {
			try {
                $GLOBALS['loop_img'] = $shads[$i];
                
			} catch(Exception $e) {  }
		}
	}
	//usleep(500000); // 500 milli
	
	
}
/* NOTES
	Things to consider for single udev script.
		-Multiple scripts running. Use the equivilent of a PID file?
		-Needing to know reverse mappings so we unmount the right volumes.
		-Might need a state file.
			-Maybe a serialized array in a file?
				-Might add too much time to execution?
			-The daemon offers application state while it's running.
		
*/
?>
